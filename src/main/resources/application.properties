# This file is the default way to configure your application. But it is not the only way
# - You can also configure your app via: ENV variables, a config server, command line args.
# - You an also replace this with multiple YML files
#    - YML files are much more production ready because we can have different files or keys per environment
#    - If you use the YML files, the .properties file can still be used for configurations that do not change with
#    environments
#   - See application.yaml for an example.

# All configurations have been commented out here and ported to the yaml file.  The commented out version is left
# for reference on how an application.properties file could look like.



# General Database configuration
# By default, Spring Boot creates tables based on the entities in our packages. If we want more control,
# we use a schema.sql file.
# @see schema.sql for more info on why we need this.
#spring.jpa.hibernate.ddl-auto=none
# See in our console output from the db
#logging.level.org.springframework.jdbc.datasource.init.ScriptUtils=debug
# Just there because there is a bug in hibernate
#logging.level.org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl=error

# Postgres specific configuration
#spring.jpa.database=postgresql
#spring.datasource.platform=postgres
# dev here is the database name @see start_postres.sh
#spring.datasource.url=jdbc:postgresql://localhost:5432/dev
# SECRETS! In real life you would NOT put this in plain text here. Use Env vars or secret managers.
#spring.datasource.username=postgres
#spring.datasource.password=postgres
